/* EDLine.CPP : DSOM-Klasse : EDisServ.DLL V 1.1 */
/* Speicherung der Info einer Textzeile          */
/*                                               */
/* (C) 1995 M.Schwarz, FoPra TU-Muenchen SS1995  */
/* (C) 1996 M.Schwarz, SOMObjects-Programmierung */
/*                     OS/2 Inside 7/96          */

/*
 *  This file was generated by the SOM Compiler.
 *  Generated using:
 *     SOM incremental update: 2.43
 */

#ifndef SOM_Module_edline_Source
#define SOM_Module_edline_Source
#endif
#define EDLine_Class_Source

#include "edline.xih"

SOM_Scope void  SOMLINK set(EDLine *somSelf,  Environment *ev,
                            long slnr, string sline, string slock,
                            long svnr, long sltime)
{
    EDLineData *somThis = EDLineGetData(somSelf);
    EDLineMethodDebug("EDLine","set");
/*a*/
    somThis->lnr = slnr;

    if (somThis->line) SOMFree(somThis->line);
    somThis->line = (string)SOMMalloc(strlen(sline)+1);
    strcpy (somThis->line, sline);

    if (somThis->lock) SOMFree(somThis->lock);
    somThis->lock = (string)SOMMalloc(strlen(slock)+1);
    strcpy (somThis->lock, slock);

    somThis->vnr = svnr;
    somThis->ltime = sltime;
/*e*/
}



SOM_Scope void SOMLINK somDefaultInit(EDLine *somSelf, som3InitCtrl* ctrl)
{
    EDLineData *somThis; /* set in BeginInitializer */
    somInitCtrl globalCtrl;
    somBooleanVector myMask;
    EDLineMethodDebug("EDLine","somDefaultInit");
    EDLine_BeginInitializer_somDefaultInit;

    EDLine_Init_SOMObject_somDefaultInit(somSelf, ctrl);
/*a*/
    somThis->lnr   = 0;
    somThis->line  = NULL;
    somThis->lock  = NULL;
    somThis->vnr   = 0;
    somThis->ltime = 0;
/*e*/
}


SOM_Scope void SOMLINK somDestruct(EDLine *somSelf, octet doFree,
                                   som3DestructCtrl* ctrl)
{
    EDLineData *somThis; /* set in BeginDestructor */
    somDestructCtrl globalCtrl;
    somBooleanVector myMask;
    EDLineMethodDebug("EDLine","somDestruct");
    EDLine_BeginDestructor;
/*a*/
    if (somThis->line) SOMFree(somThis->line);
    if (somThis->lock) SOMFree(somThis->lock);
/*e*/
    EDLine_EndDestructor;
}


